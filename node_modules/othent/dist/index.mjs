import t from"axios";import{createAuth0Client as a}from"@auth0/auth0-spa-js";import e from"jwt-decode";import n from"crypto-js";async function r(t){const a=await crypto.subtle.digest("SHA-256","string"!=typeof t?t:(new TextEncoder).encode(t));return Array.from(new Uint8Array(a)).map((t=>t.toString(16).padStart(2,"0"))).join("")}async function o(o){const s=o.API_ID,i=window.location.href;return t({method:"POST",url:"https://server.othent.io/use-othent",data:{API_ID:s,callbackURL:i}}).then((o=>{if(!1===o.data.success)throw new Error("Please specify an API ID (you can get one from Othent.io)");const i=()=>a({domain:"auth.othent.io",clientId:"dyegx4dZj5yOv0v0RkoUsc48CIqaNS6C",authorizationParams:{redirect_uri:window.location.origin}});function c(t,a){return t.getTokenSilently({detailedResponse:!0,authorizationParams:a,cacheMode:"off"})}async function d(t){let a;if(t instanceof File)a=await async function(t){return new Promise(((a,e)=>{const n=new FileReader;n.onload=()=>{const t=n.result,e=Buffer.from(t);a(e)},n.onerror=e,n.readAsArrayBuffer(t)}))}(t);else if("string"==typeof t)a=Buffer.from(t,"utf8");else if(Buffer.isBuffer(t))a=t;else if(t instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&t instanceof SharedArrayBuffer)a=Buffer.from(t);else{if(!(t instanceof Uint8Array))throw new Error("Invalid data, we accept: string | Buffer | ArrayBuffer | SharedArrayBuffer | Uint8Array | File");a=Buffer.from(t.buffer)}return a}return{getAPIID:async function(){const t=await i(),a={transaction_input:JSON.stringify({othentFunction:"API_ID"})},n=(await c(t,a)).id_token,r=e(n);if(r.contract_id)return{API_ID:r.API_ID};throw new Error('{ success: false, message: "Please create a Othent account" }')},queryWalletAddressTxns:async function(a){return await t({method:"POST",url:"https://server.othent.io/query-wallet-address-txns",data:{walletAddress:a.walletAddress}}).then((t=>t.data)).catch((t=>{throw t}))},ping:async function(){return await t({method:"GET",url:"https://server.othent.io/"}).then((t=>t.data)).catch((t=>{throw t}))},logIn:async function(a={}){var n;null!==(n=a.testNet)&&void 0!==n||(a.testNet=!1);const r=await i(),o=await r.isAuthenticated(),d={authorizationParams:{transaction_input:JSON.stringify({othentFunction:"idToken",testNet:a.testNet}),redirect_uri:window.location.origin}},u=async t=>{await r.loginWithPopup(t);const a={transaction_input:JSON.stringify({othentFunction:"idToken"})},n=await c(r,a),o=e(n.id_token);if((s=o)&&"string"==typeof s.contract_id)return{encoded:n.id_token,decoded:o};throw new Error("Invalid JWT structure received.");var s},l=async(t,a,e)=>{if(e?a.test_net_contract_id:a.contract_id){return["nonce","sid","aud","iss","iat","exp","updated_at"].forEach((t=>delete a[t])),a}return await h(t,e?"testNet":"")},h=async(a,e="")=>(await t({method:"POST",url:"https://server.othent.io/create-user",data:{JWT:a,API_ID:s,network:e}})).data;if(o){const{encoded:t,decoded:e}=await u(d);return l(t,e,a.testNet)}try{const{encoded:t,decoded:e}=await u(d);return l(t,e,a.testNet)}catch(t){throw new Error("Your browser is blocking us! Please turn off your shields or allow cross site cookies! :)")}},logOut:async function(){const t=await i();return await t.logout({logoutParams:{returnTo:window.location.origin}}),{response:"User logged out"}},userDetails:async function(){const t=await i(),a={transaction_input:JSON.stringify({othentFunction:"idToken"})},n=(await c(t,a)).id_token,r=e(n);if(r.contract_id)return delete r.nonce,delete r.sid,delete r.aud,delete r.iss,delete r.iat,delete r.exp,delete r.updated_at,r;throw new Error('{ success: false, message: "Please create a Othent account" }')},readContract:async function(a){const e=await i(),n={transaction_input:JSON.stringify({othentFunction:"idToken"})},r=(await c(e,n)).id_token;return await t({method:"POST",url:"https://server.othent.io/read-contract",data:{JWT:r,customDREURL:a.customDREURL}}).then((t=>t.data)).catch((t=>{throw console.log(t.response.data),t}))},viewCustomContract:async function(a){var e,n;let r;return null!==(e=a.tags)&&void 0!==e||(a.tags=[]),null!==(n=a.testNet)&&void 0!==n||(a.testNet=!1),r=!0===a.testNet?"testNet":"mainNet",await t({method:"POST",url:"https://server.othent.io/view-custom-contract-state",data:{contract_id:a.contract_id,func:a.function,data:a.tags,network:r,customDREURL:a.customDREURL}}).then((t=>t.data)).catch((t=>{throw console.log(t.response.data),t}))},signTransactionWarp:async function(t){var a,n;null!==(a=t.tags)&&void 0!==a||(t.tags=[]),null!==(n=t.testNet)&&void 0!==n||(t.testNet=!1);const r={function:t.othentFunction,data:{toContractId:t.data.toContractId,toContractFunction:t.data.toContractFunction,txnData:t.data.txnData}},o=await i(),s={transaction_input:JSON.stringify({othentFunction:t.othentFunction,warpData:r,testNet:t.testNet})},d=await c(o,s),u=d.id_token,l=e(u);if(!l.contract_id)throw new Error('{success: false, message:"Please create a Othent account"}');if(!0===t.testNet&&!l.test_net_contract_id)throw new Error('{success: false, message:"Please create a Othent test net account"}');return{JWT:d.id_token,tags:t.tags,testNet:t.testNet}},sendTransactionWarp:async function(a){const e=a.JWT,n=a.tags;let r;return r=!0===a.testNet?"testNet":"mainNet",await t({method:"POST",url:"https://server.othent.io/send-transaction",data:{JWT:e,tags:n,API_ID:s,network:r}}).then((t=>t.data)).catch((t=>{throw console.log(t.response.data),t}))},signTransactionArweave:async function(t){var a;null!==(a=t.tags)&&void 0!==a||(t.tags=[]);const n=await d(t.data);if(!n)throw new Error("Invalid data, we accept: string | Buffer | ArrayBuffer | SharedArrayBuffer | Uint8Array | File");const o=await r(n),s=await i(),u={transaction_input:JSON.stringify({othentFunction:t.othentFunction,file_hash:o})},l=await c(s,u),h=l.id_token;if(!e(h).contract_id)throw new Error('{ success: false, message: "Please create a Othent account" }');return{data:n,JWT:l.id_token,tags:t.tags}},sendTransactionArweave:async function(t){const a=t.data,e=new Blob([a]),n=new FormData;return n.append("file",e),n.append("dataHashJWT",t.JWT),n.append("API_ID",s),n.append("tags",JSON.stringify(t.tags)),await fetch("https://server.othent.io/upload-data-arweave",{method:"POST",body:n}).then((t=>t.json())).then((t=>t)).catch((t=>{throw console.log(t),t}))},signTransactionBundlr:async function(t){var a;null!==(a=t.tags)&&void 0!==a||(t.tags=[]);const n=await d(t.data);if(!n)throw new Error("Invalid data, we accept: string | Buffer | ArrayBuffer | SharedArrayBuffer | Uint8Array | File");const o=await r(n),s=await i(),u={transaction_input:JSON.stringify({othentFunction:t.othentFunction,file_hash:o})},l=await c(s,u),h=l.id_token;if(!e(h).contract_id)throw new Error('{ success: false, message: "Please create a Othent account" }');return{data:n,JWT:l.id_token,tags:t.tags}},sendTransactionBundlr:async function(t){const a=t.data,e=new Blob([a]),n=new FormData;return n.append("file",e),n.append("dataHashJWT",t.JWT),n.append("API_ID",s),n.append("tags",JSON.stringify(t.tags)),await fetch("https://server.othent.io/upload-data-bundlr",{method:"POST",body:n}).then((t=>t.json())).then((t=>t)).catch((t=>{throw console.log(t),t}))},initializeJWK:async function(a){const e=await i(),n={transaction_input:JSON.stringify({othentFunction:"initializeJWK",warpData:{function:"initializeJWK",data:{JWK_public_key_PEM:a.JWK_public_key_PEM,JWK_public_key:null}}})},r=(await c(e,n)).id_token;return t({method:"POST",url:"https://server.othent.io/initialize-JWK",data:{PEM_key_JWT:r,API_ID:s}}).then((t=>t.data)).catch((t=>{throw console.log(t.response.data),t}))},readCustomContract:async function(a){var e;let n;return null!==(e=a.testNet)&&void 0!==e||(a.testNet=!1),n=!0===a.testNet?"testNet":"mainNet",await t({method:"POST",url:"https://server.othent.io/read-custom-contract",data:{contract_id:a.contract_id,network:n,customDREURL:a.customDREURL}}).then((t=>t.data)).catch((t=>{throw console.log(t.response.data),t}))},verifyArweaveData:async function(a){let n,o=await fetch(`https://arweave.net/tx/${a.transactionId}`,{headers:{responseType:"arraybuffer"}});(await o.json()).tags.map((t=>{"File-Hash-JWT"===atob(t.name)&&(n=e(atob(t.value)))}));const s=n.file_hash;let i=(await t.get(`https://arweave.net/${a.transactionId}`,{responseType:"arraybuffer"})).data;const c=await r(i);return s===c?{validData:!0,contract_id:n.contract_id,onChainHash:c,tagHash:s,iat:n.iat,userId:n.sub}:{validData:!1,onChainHash:c,tagHash:s}},verifyBundlrData:async function(a){let n,o=await fetch(`https://gateway.bundlr.network/tx/${a.transactionId}`,{headers:{responseType:"arraybuffer"}});(await o.json()).tags.map((t=>{"File-Hash-JWT"===t.name&&(n=e(t.value))}));const s=n.file_hash;let i=(await t.get(`https://arweave.net/${a.transactionId}`,{responseType:"arraybuffer"})).data;const c=await r(i);return s===c?{validData:!0,contract_id:n.contract_id,onChainHash:c,tagHash:s,iat:n.iat,userId:n.sub}:{validData:!1,onChainHash:c,tagHash:s}},encryptData:async function(t){const a=t.data,e=t.key;return{encryptedData:n.AES.encrypt(a,e).toString()}},decryptData:async function(t){const a=t.data,e=t.key,r=n.AES.decrypt(a,e);return{decryptedData:n.enc.Utf8.stringify(r)}},deployWarpContract:async function(a){var e,n;let o;null!==(e=a.tags)&&void 0!==e||(a.tags=[]),null!==(n=a.testNet)&&void 0!==n||(a.testNet=!1),o=!0===a.testNet?"testNet":"mainNet";const s=await r(a.contractSrc),d=await i(),u={transaction_input:JSON.stringify({othentFunction:"uploadData",file_hash:s})},l=(await c(d,u)).id_token;return await t({method:"POST",url:"https://server.othent.io/deploy-warp-contract",data:{contractSrc:a.contractSrc,contractState:a.state,JWT:l,tags:a.tags,network:o}}).then((t=>t.data)).catch((t=>{throw console.log(t.response.data),t}))},deployWarpContractFromTx:async function(a){var e,n;let r;null!==(e=a.tags)&&void 0!==e||(a.tags=[]),null!==(n=a.testNet)&&void 0!==n||(a.testNet=!1),r=!0===a.testNet?"testNet":"mainNet";const o=await i(),s={transaction_input:JSON.stringify({othentFunction:"deployWarpContractFromTx",srcTxId:a.srcTxId})},d=(await c(o,s)).id_token;return await t({method:"POST",url:"https://server.othent.io/deploy-warp-contract-from-tx",data:{srcTxId:a.srcTxId,contractState:a.state,JWT:d,tags:a.tags,network:r}}).then((t=>t.data)).catch((t=>{throw console.log(t.response.data),t}))}}})).catch((t=>{throw console.error("An error occurred:",t),t}))}export{o as Othent};
//# sourceMappingURL=index.mjs.map
